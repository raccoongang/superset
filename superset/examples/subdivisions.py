"""This module contains data related to subdivisions and is used for geo mapping"""

regions_by_country_map: dict[str, dict[str, str]] = {
    "ukraine": {
        "Вінницька область": "UA-05",
        "Волинська область": "UA-07",
        "Луганська область": "UA-09",
        "Дніпропетровська область": "UA-12",
        "Донецька область": "UA-14",
        "Житомирська область": "UA-18",
        "Закарпатська область": "UA-21",
        "Запорізька область": "UA-23",
        "Івано-Франківська область": "UA-26",
        "м.Київ": "UA-30",
        "Київська область": "UA-32",
        "Кіровоградська область": "UA-35",
        "м.Севастополь": "UA-40",
        "Автономна Республіка Крим": "UA-43",
        "Львівська область": "UA-46",
        "Миколаївська область": "UA-48",
        "Одеська область": "UA-51",
        "Полтавська область": "UA-53",
        "Рівненська область": "UA-56",
        "Сумська область": "UA-59",
        "Тернопільська область": "UA-61",
        "Харківська область": "UA-63",
        "Херсонська область": "UA-65",
        "Хмельницька область": "UA-68",
        "Черкаська область": "UA-71",
        "Чернігівська область": "UA-74",
        "Чернівецька область": "UA-77",
    },
}


def get_region_iso(country: str, region_name: str) -> str:
    """
    Get ISO 3166-2 code of region based on country and region names.
    """
    return regions_by_country_map.get(country, {}).get(region_name, region_name)
